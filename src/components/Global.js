import styled from "styled-components"
import React, {useRef} from "react"

const fontSet = {
    articleHeadingFont: "Source Serif Pro",
    articleTextFont: "Barlow"
}

const lightTheme = {
    name: 'light',
    primary: "#191A1F", //used
    primary50: "#1a90ff", //used
    secondary: "#2F2E41", //used
    dark: "#FFFFFF", //used
    light: "#6C63FF", //used
    code_background: "#2d2b55",
    code_text: "#e5f5fc",
    background: "#f7f7f7",
    disabled: "#CACACA",
    ...fontSet
}

const darkTheme = {
    name: 'dark',
    primary: "#FFFFFF",
    primary50: "#1a90ff", 
    secondary: "#FFFFFF",
    dark: "#191A1F",
    light: "#6C63FF",
    code_background: "#263238",
    code_text: "#dfe4dc",
    background: "#38383c",
    disabled: "#888",
    ...fontSet
}

const size = {
    mobileS: "320px",
    mobileM: "375px",
    mobileL: "500px",
    tablet: "768px",
    laptop: "1024px",
    laptopL: "1440px",
    desktop: "2560px"
}

const device = {
    mobileS: `(min-width: ${size.mobileS})`,
    mobileM: `(min-width: ${size.mobileM})`,
    mobileL: `(min-width: ${size.mobileL})`,
    tablet: `(min-width: ${size.tablet})`,
    laptop: `(min-width: ${size.laptop})`,
    laptopL: `(min-width: ${size.laptopL})`,
    desktop: `(min-width: ${size.desktop})`,
    desktopL: `(min-width: ${size.desktop})`
}

const Row = styled.div`
  display: flex;
  flex-direction: row;
`

const Col = styled.div`
  display: flex;
  flex-direction: column;
`

const RocketLogo = (props) => {
    return <svg width="406" height="514" viewBox="0 0 406 514" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#clip0)">
    <path d="M59.2683 329.36C56.9699 335.163 57.8651 342.179 61.4861 346.767L64.3947 350.45C72.7983 337.842 82.5927 324.16 94.4718 309.125C95.3112 308.062 96.1754 307.548 97.018 306.568L78.3057 282.874C67.4272 307.784 61.0834 324.803 59.2683 329.36Z" fill="black"/>
    <path d="M161.756 394.308C149.849 409.382 139.07 421.805 129.167 432.452L133.107 437.44C136.762 442.068 142.357 443.181 146.956 440.185C153.117 436.166 162.806 430.393 183.374 415.892L163.779 391.084C163.005 392.155 162.599 393.245 161.756 394.308V394.308Z" fill="black"/>
    <path d="M155.416 317.172C146.82 306.289 122.647 316.046 111.291 330.419C73.3032 378.512 56.1459 412.609 48.4423 432.742C46.2338 438.511 47.1538 445.417 50.7345 449.95C54.3215 454.495 59.7855 455.648 64.3451 452.852C79.8916 443.295 106.496 421.676 144.937 373.014C157.423 357.198 163.584 327.517 155.425 317.183L155.416 317.172Z" fill="black"/>
    <path d="M37.1269 200.491L3.48458 243.083C-0.319188 247.898 -1.09977 255.353 1.59509 261.259C4.2249 267.086 9.73231 270.055 14.9733 268.278C33.1559 262.106 49.1546 259.498 59.9279 262.996C75.2545 228.498 91.724 196.742 109.166 167.895C99.0776 159.707 65.7388 164.268 37.1269 200.491V200.491Z" fill="black"/>
    <path d="M201.33 512.384C205.912 515.318 211.459 514.184 215.087 509.588L248.732 466.997C274.779 434.013 279.363 391.457 273.453 377.963C248.041 402.21 222.298 422.684 198.279 439.825C199.937 451.672 198.834 463.165 194.915 496.734C194.15 503.232 196.802 509.518 201.33 512.384V512.384Z" fill="black"/>
    <path d="M236.147 151.057C222.236 168.672 222.236 197.326 236.147 214.942C250.061 232.557 272.698 232.557 286.612 214.942C300.526 197.326 300.526 168.672 286.612 151.057C272.698 133.441 250.061 133.441 236.147 151.057Z" fill="black"/>
    <path d="M405.3 14.6899C404.872 7.24297 400.189 1.35678 394.325 0.799928C365.113 -1.98434 336.014 2.56461 307.492 13.6076C309.639 38.415 319.774 65.2617 337.077 87.1672C354.587 109.332 376.369 122.159 396.314 124.559C403.996 90.477 407.639 53.9756 405.3 14.6899V14.6899Z" fill="black"/>
    <path d="M320.257 108.465C300.464 83.4066 288.377 53.3521 284.499 24.0898C213.073 61.1755 144.698 142.163 90.668 255.933L117.511 289.917C135.852 280.49 158.117 278 172.238 295.874C186.379 313.78 184.375 341.956 176.931 365.143L204.657 400.245C273.8 347.489 354.299 264.372 388.53 153.79C364.852 149.26 340.373 133.931 320.257 108.465V108.465ZM303.431 236.24C280.246 265.592 242.515 265.592 219.327 236.24C196.139 206.883 196.139 159.111 219.327 129.759C242.515 100.406 280.246 100.406 303.431 129.759C326.62 159.115 326.62 206.883 303.431 236.24Z" fill="black"/>
    </g>
    <defs>
    <clipPath id="clip0">
    <rect width="406" height="514" fill="white"/>
    </clipPath>
    </defs>
    </svg>
}

const InstaLogo = (props) => {
    return <svg width="25" height="25" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M20.5762 17.5C20.5762 19.1988 19.1988 20.5762 17.5 20.5762C15.8012 20.5762 14.4238 19.1988 14.4238 17.5C14.4238 15.8012 15.8012 14.4238 17.5 14.4238C19.1988 14.4238 20.5762 15.8012 20.5762 17.5Z" fill={props.color}/>
    <path d="M22.6953 8.20312H12.3047C10.043 8.20312 8.20312 10.043 8.20312 12.3047V22.6953C8.20312 24.957 10.043 26.7969 12.3047 26.7969H22.6953C24.957 26.7969 26.7969 24.957 26.7969 22.6953V12.3047C26.7969 10.043 24.957 8.20312 22.6953 8.20312ZM17.5 22.627C14.673 22.627 12.373 20.327 12.373 17.5C12.373 14.673 14.673 12.373 17.5 12.373C20.327 12.373 22.627 14.673 22.627 17.5C22.627 20.327 20.327 22.627 17.5 22.627ZM23.3789 12.6465C22.8125 12.6465 22.3535 12.1875 22.3535 11.6211C22.3535 11.0547 22.8125 10.5957 23.3789 10.5957C23.9453 10.5957 24.4043 11.0547 24.4043 11.6211C24.4043 12.1875 23.9453 12.6465 23.3789 12.6465Z" fill={props.color}/>
    <path d="M25.7715 0H9.22852C4.14001 0 0 4.14001 0 9.22852V25.7715C0 30.86 4.14001 35 9.22852 35H25.7715C30.86 35 35 30.86 35 25.7715V9.22852C35 4.14001 30.86 0 25.7715 0ZM28.8477 22.6953C28.8477 26.0876 26.0876 28.8477 22.6953 28.8477H12.3047C8.91235 28.8477 6.15234 26.0876 6.15234 22.6953V12.3047C6.15234 8.91235 8.91235 6.15234 12.3047 6.15234H22.6953C26.0876 6.15234 28.8477 8.91235 28.8477 12.3047V22.6953Z" fill={props.color}/>
    </svg>
}

const GithubLogo = (props) => {
    return <svg width="25" height="25" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#clip0)">
    <path d="M33.0746 1.92528C31.7909 0.64184 30.2456 0 28.4374 0H6.56247C4.75491 0 3.20905 0.64184 1.92529 1.92528C0.641842 3.20896 0 4.75482 0 6.56246V28.4377C0 30.2454 0.641842 31.7911 1.92529 33.0746C3.20897 34.3582 4.75491 35.0001 6.56247 35.0001H11.6666C12.0006 35.0001 12.2514 34.9886 12.4185 34.9662C12.5854 34.9432 12.7524 34.8444 12.9196 34.6696C13.0869 34.495 13.1702 34.2405 13.1702 33.9064C13.1702 33.8611 13.1662 33.3441 13.1587 32.3567C13.151 31.3691 13.1472 30.5868 13.1472 30.0095L12.6231 30.1007C12.2889 30.1614 11.8674 30.1881 11.3584 30.1804C10.8497 30.1728 10.3217 30.1198 9.77487 30.021C9.22777 29.9221 8.71905 29.6943 8.24809 29.3376C7.77736 28.9803 7.44319 28.5134 7.24566 27.9362L7.01772 27.4118C6.86584 27.0628 6.62672 26.6752 6.30006 26.2502C5.97339 25.8247 5.64305 25.536 5.30888 25.3841L5.14934 25.2702C5.04311 25.1943 4.94438 25.1027 4.85316 24.9965C4.76209 24.8899 4.69378 24.7835 4.6482 24.6775C4.60263 24.5709 4.64046 24.4835 4.76209 24.415C4.88373 24.3467 5.10377 24.3129 5.42293 24.3129L5.87849 24.3811C6.18241 24.4418 6.55817 24.6239 7.00654 24.9279C7.4546 25.2317 7.82293 25.6266 8.11161 26.1126C8.46118 26.7356 8.88235 27.21 9.3763 27.5366C9.86985 27.8636 10.3675 28.0269 10.8687 28.0269C11.3699 28.0269 11.8028 27.9889 12.1675 27.9133C12.5319 27.8371 12.8737 27.7229 13.1929 27.571C13.3296 26.5534 13.7018 25.7706 14.3093 25.2238C13.4435 25.1326 12.665 24.996 11.9736 24.8136C11.2826 24.6311 10.5685 24.3351 9.83186 23.9248C9.09488 23.5146 8.48353 23.006 7.9974 22.398C7.51135 21.79 7.11245 20.9925 6.80127 20.0054C6.48993 19.0178 6.33421 17.8783 6.33421 16.5872C6.33421 14.7492 6.93447 13.1843 8.13452 11.8932C7.57233 10.5109 7.6254 8.96158 8.2939 7.24484C8.73446 7.10805 9.38779 7.21068 10.2536 7.55251C11.1195 7.89458 11.7536 8.18709 12.1563 8.4298C12.559 8.67258 12.8817 8.87786 13.1248 9.04514C14.5378 8.65016 15.9961 8.4527 17.4999 8.4527C19.0036 8.4527 20.4621 8.65016 21.8752 9.04514L22.7411 8.49827C23.3338 8.13354 24.0324 7.79937 24.8376 7.49569C25.6428 7.19193 26.2579 7.10829 26.6834 7.24508C27.3668 8.96182 27.4279 10.5111 26.8653 11.8934C28.0654 13.1846 28.6658 14.7495 28.6658 16.5874C28.6658 17.8788 28.5101 19.0221 28.1987 20.0168C27.8876 21.0118 27.4853 21.8096 26.9912 22.4096C26.4976 23.0097 25.8823 23.5145 25.1456 23.9249C24.4088 24.3349 23.6948 24.6315 23.0035 24.8134C22.3123 24.9958 21.5339 25.133 20.668 25.2242C21.4574 25.9075 21.8523 26.9858 21.8523 28.4596V33.9057C21.8523 34.1641 21.89 34.3728 21.966 34.5323C22.0424 34.6918 22.1637 34.8016 22.3308 34.8628C22.4985 34.9235 22.6459 34.9614 22.7754 34.9764C22.9049 34.9917 23.0906 34.9994 23.3337 34.9994H28.4378C30.2454 34.9994 31.7913 34.3575 33.0745 33.0738C34.3582 31.7902 35 30.2442 35 28.4367V6.56246C34.9998 4.75482 34.358 3.20872 33.0746 1.92528Z" fill={props.color}/>
    </g>
    <defs>
    <clipPath id="clip0">
    <rect width="35" height="35" fill="white"/>
    </clipPath>
    </defs>
    </svg>
}

const LinkedInLogo = (props) => {
    return <svg width="25" height="25" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M33.0747 1.92528C31.7916 0.641839 30.2456 0 28.438 0H6.56255C4.75497 0 3.20901 0.641839 1.92531 1.92528C0.641849 3.20895 0 4.75481 0 6.56245V28.4373C0 30.2448 0.641849 31.7908 1.92531 33.0745C3.20901 34.3582 4.75497 35 6.56255 35H28.4378C30.2454 35 31.7913 34.3582 33.0745 33.0745C34.3582 31.7908 35 30.2449 35 28.4373V6.56245C34.9999 4.75481 34.3581 3.20871 33.0747 1.92528ZM10.6641 29.3031H5.40033V13.4893H10.6641V29.3031ZM10.1859 10.5615C9.63907 11.0856 8.91741 11.3477 8.02104 11.3477H7.99805C7.13225 11.3477 6.4299 11.0856 5.89045 10.5615C5.35092 10.0374 5.08132 9.38807 5.08132 8.61334C5.08132 7.82346 5.35874 7.17012 5.91304 6.65351C6.46773 6.13705 7.1854 5.87871 8.06637 5.87871C8.94742 5.87871 9.65383 6.13705 10.1856 6.65351C10.7172 7.17012 10.9908 7.82346 11.0058 8.61334C11.0058 9.38775 10.7327 10.0371 10.1859 10.5615ZM29.5999 29.3031H24.3361V20.8495C24.3361 18.4649 23.4553 17.2722 21.6931 17.2722C21.0247 17.2722 20.4624 17.4582 20.0068 17.8305C19.5507 18.2025 19.209 18.6544 18.9815 19.1865C18.8749 19.4596 18.8219 19.8849 18.8219 20.462V29.303H13.5582C13.6037 19.7633 13.6037 14.4918 13.5582 13.4891H18.8219V15.7218C19.9287 13.9914 21.5003 13.1244 23.5389 13.1244C25.3618 13.1244 26.828 13.7246 27.9369 14.9245C29.0459 16.1246 29.6002 17.8945 29.6002 20.2334V29.3031H29.5999Z" fill={props.color}/>
    </svg>
}

const MediumLogo = (props) => {
    return <svg width="25" height="26" viewBox="0 0 25 26" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M8.32917 24.5799C8.32917 25.4377 7.78646 25.7919 7.18542 25.4377L0.697917 21.5957C0.502083 21.4858 0.3375 21.3019 0.203125 21.044C0.06875 20.786 0 20.5293 0 20.2763V1.48346C0 0.78245 0.355208 0.465266 1.15833 0.939191L8.2875 5.16008C8.39062 5.28227 8.31458 4.44303 8.32917 24.5799V24.5799ZM9.22187 6.90645L16.6719 21.1834L9.22187 16.7984V6.90645ZM25 7.20389V24.5799C25 24.8551 24.9354 25.0773 24.8042 25.2476C24.674 25.4179 24.4969 25.5031 24.274 25.5031C24.051 25.5031 23.8323 25.4315 23.6187 25.2883L17.4667 21.6611L25 7.20389ZM24.9583 5.2255C24.9583 5.25882 23.7656 7.56427 21.3802 12.1406C18.9948 16.7169 17.5969 19.3976 17.1875 20.1776L11.7469 9.72531L16.2667 1.03793C16.5125 0.559064 17.0167 0.47514 17.3552 0.675077L24.9031 5.12676C24.9396 5.14774 24.9583 5.18107 24.9583 5.2255V5.2255Z" fill={props.color}/>
    </svg>
}
const HorizontalContainer = styled(Row)`
height:80vh;
width: 99vw;
white-space: nowrap;
position: absolute;
bottom: 0px;
left: 0px;
overflow-x:scroll;
align-items: center;
padding-bottom: 20px;
`
// const HorizontalScreen = (props) => {
//     const onWheel = e => {
//         e.preventDefault();
//         const container = scrollRef.current;
//         const containerScrollPosition = scrollRef.current.scrollLeft;
    
//         container.scrollTo({
//           top: 0,
//           left: containerScrollPosition + e.deltaY
//         });
//     };
    
//     const scrollRef = useRef(null);
//     return <>
//     <HorizontalContainer  ref={scrollRef} onWheel={onWheel}>
//         {props.children}
//     </HorizontalContainer>
//     </>
   
    
// }

export { lightTheme, darkTheme, device, MediumLogo,InstaLogo, GithubLogo, LinkedInLogo ,Row, Col, RocketLogo}